<?php

// -----------------------------------------
// semplice
// admin/atts/animations.php
// -----------------------------------------

$animations = array(
	// event
	'tabs' => array(
		'animations' => array(
			'animations-linked' => array(
				'hide-title'		=> true,
				'break'				=> '2',
				'style-class'		=> 'linked-preset-option',
				'linked-preset' => array(
					'title'				=> 'Linked Preset',
					'size'				=> 'span4',
					'data-input-type' 	=> 'linked-animate-preset',
					'class'				=> 'editor-listen',
					'style-class'		=> 'linked-global-preset'
				),
			),
			'animations-general' => array(
				'hide-title'		=> true,
				'break'				=> '3',
				'style-class'		=> 'animation-regular-general',
				'repeat' => array(
					'title'				=> 'Play Count',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 1,
					'min'				=> 1,
					'max'				=> 100,
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'data-range-slider' => 'animate',
				),
				'loop' => array(
					'data-input-type' => 'onoff-switch',
					'title'		 	  => 'Loop',
					'size'		 	  => 'span1',
					'hide-title' => true,
					'class'      		=> 'editor-listen',
					'data-handler' 		=> 'animate',
					'default' 	 	  => 'no',
					'data-on'		  => 'yes',
					'data-off'		  => 'no',
					'style-class'	  => 'onoff-inline animate-loop'
				),
				'mobile' => array(
					'data-input-type' => 'onoff-switch',
					'title'		 	  => 'Mobile',
					'size'		 	  => 'span1',
					'hide-title' => true,
					'class'      		=> 'editor-listen',
					'data-handler' 		=> 'animate',
					'default' 	 	  => 'on',
					'data-on'		  => 'on',
					'data-off'		  => 'off',
					'style-class'	  => 'onoff-inline animate-mobile'
				),
			),
			'animations-scroll' => array(
				'hide-title'		=> true,
				'break'				=> '2',
				'style-class'		=> 'animation-onscroll-general',
				'scroll' => array(
					'data-input-type' 	=> 'button',
					'title'		 		=> 'Scroll',
					'button-title'		=> 'Scroll Settings',
					'size'		 		=> 'span3',
					'class'				=> 'semplice-button white-button expand-options admin-click-handler',
					'data-expand-options' => 'onscrollOptions',
					'data-handler'		=> 'animate'
				),
				'mobile' => array(
					'data-input-type' => 'onoff-switch',
					'title'		 	  => 'Mobile',
					'size'		 	  => 'span1',
					'hide-title' => true,
					'class'      		=> 'editor-listen',
					'data-handler' 		=> 'animate',
					'default' 	 	  => 'on',
					'data-on'		  => 'on',
					'data-off'		  => 'off',
					'style-class'	  => 'onoff-inline animate-mobile'
				),
			),
			'animations-timeline' => array(
				'title'				=> 'Timeline',
				'break'				=> '1',
				'timeline' => array(
					'title'			=> 'Timeline',
					'hide-title'	=> true,
					'size'			=> 'span4',
					'data-input-type'    => 'timeline',
					'class' 		=> 'editor-listen',
					'data-handler'	=> 'animate',
					'default'		=> 'on_load',
					'style-class'	=> 'ep-animate-timeline',
				),
			),
		),
		'presets' => array(
			'preset' => array(
				'hide-title'		=> true,
				'break'				=> '1',
				'style-class'		=> 'animate-presets',
				'preset' => array(
					'title'				=> 'Preset',
					'hide-title'		=> true,
					'size'				=> 'span4',
					'data-input-type'	=> 'animate-presets',
					'data-handler'		=> 'animate',
					'class'				=> 'editor-listen',
				),
			),
		),
		'initial' => array(
			'initial-styling' => array(
				'title' 	 => 'Styling',
				'help'	 => 'These settings will overwrite your default styles for the element.',
				'break' 	 => '2',
				'opacity' => array(
					'title'				=> 'Opacity',
					'help'				=> 'For the editor we will set a minimum opacity of 10% to make it easier to adjust your animations without the element being completely hidden.',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'data-divider'		=> 100,
					'default'			=> 1,
					'min'				=> 0,
					'max'				=> 100,
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'background-color' => array(
					'title'			=> 'BG Color',
					'data-style-option' => true,
					'size'			=> 'span2',
					'data-input-type'	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> 'transparent',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'data-picker'   => 'animate',
					'style-class'	=> 'animate-initial-bg-color'
				),
			),
			'initial-gradient' => array(
				'title' 	 => 'Gradient',
				'break' 	 => '2,3,3',
				'style-class' => 'ep-collapsed animate-initial-gradient',
				'gradient_applyto' => array(
					'data-input-type' 	=> 'select-box',
					'title'				=> 'Apply to',
					'size'				=> 'span2',
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'default' 	 		=> 'background',
					'help'	     		=> '<b>Notes:</b> <br />1. The setting \'Text\' only works with the \'Text\' and \'Paragraph\' modules.<br /><br />2. It\'s not possible to combine text gradient and text shadow.<br /><br />3. You can combine a background image you\'ve set in your styling tab with a gradient.',
					'select-box-values' => array(
						'background'	=> 'Background',
						'text' 	 		=> 'Text',
					),
				),
				'gradient_angle' => array(
					'title'				=> 'Angle',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 360,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'gradient_color_2' => array(
					'title'			=> 'Top Color',
					'size'			=> 'span2',
					'offset'		=> false,
					'data-input-type' 	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> '#000000',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'data-picker'	=> 'animate',
					'data-timeline-step'=> 'initial'
				),
				'gradient_color_2_opacity' => array(
					'title'				=> 'Opacity',
					'size'				=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 100,
					'data-divider'  	=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'gradient_color_2_progress' => array(
					'title'				=> 'Progress',
					'size'				=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 100,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'gradient_color_1' => array(
					'title'			=> 'Bottom Color',
					'size'			=> 'span2',
					'offset'		=> false,
					'data-input-type' 	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> '#000000',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'data-picker'	=> 'animate',
					'data-timeline-step'=> 'initial'
				),
				'gradient_color_1_opacity' => array(
					'title'				=> 'Opacity',
					'size'				=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 100,
					'data-divider'  	=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'gradient_color_1_progress' => array(
					'title'				=> 'Progress',
					'size'				=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
			),
			'initial-move-scale' => array(
				'title' 	 => 'Move & Scale',
				'break' 	 => '2',
				'style-class' => 'ep-collapsed',
				'translateX' => array(
					'title'				=> 'Move X',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-has-unit'		=> true,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'translateY' => array(
					'title'				=> 'Move Y',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-has-unit'		=> true,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'scaleX' => array(
					'title'				=> 'Scale X',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 1,
					'min'				=> 0,
					'max'				=> 9999,
					'data-divider'		=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'scaleY' => array(
					'title'				=> 'Scale Y',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 1,
					'min'				=> 0,
					'max'				=> 9999,
					'data-divider'		=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
			),
			'initial-skew-rotate' => array(
				'title' 	 => 'Skew & Rotate',
				'break' 	 => '2,1',
				'style-class' => 'ep-collapsed',
				'skewX' => array(
					'title'				=> 'Skew X',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'skewY' => array(
					'title'				=> 'Skew Y',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'rotate' => array(
					'title'				=> 'Rotate',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
			),
			'initial-3d-rotate' => array(
				'title' 	 => '3D Rotate',
				'break' 	 => '2',
				'style-class' => 'ep-collapsed',
				'rotateX' => array(
					'title'				=> 'Rotate X',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'rotateY' => array(
					'title'				=> 'Rotate Y',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
			),
			'initial-color' => array(
				'title' 	 => 'Text Color',
				'break' 	 => '1',
				'style-class' => 'ep-collapsed animate-initial-color',
				'color' => array(
					'title'			=> 'Color',
					'help'		 => 'This will overwrite the colors of your text module. If you want to go back to the color settings of your text module please set this to transparent.',
					'data-style-option' => true,
					'size'			=> 'span2',
					'data-input-type'	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> '#000000',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'data-picker'   => 'animate',
					'data-timeline-step'=> 'initial'
				),
			),
			'initial-box-shadow' => array(
				'title' 	 => 'Drop Shadow',
				'break' 	 => '3,3',
				'style-class'=> 'ep-collapsed',
				'help'		 => 'Note that it\'s not possible to combine both a box shadow and a gradient on a text module. In this case just set all values to zero to reset it.',
				'box-shadow-color' => array(
					'title'			=> 'Color',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> '#000000',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'responsive'	=> true,
					'data-picker'	=> 'animate',
					'data-timeline-step'=> 'initial'
				),
				'box-shadow-h-length' => array(
					'title'			=> 'H Length',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 999,
					'class'			=> 'editor-listen',
					'data-handler'	=> 'animate',
					'data-has-unit'	=> true,
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'box-shadow-v-length' => array(
					'title'			=> 'V Length',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-has-unit'	=> true,
					'data-timeline-step'=> 'initial'
				),
				'box-shadow-blur-radius' => array(
					'title'			=> 'Blur',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-has-unit'	=> true,
					'data-timeline-step'=> 'initial'
				),
				'box-shadow-spread-radius' => array(
					'title'			=> 'Spread',
					'size'			=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-has-unit'	=> true,
					'data-timeline-step'=> 'initial',
					'help'  => 'This option only applies to box shadows, not text shadows.',
				),
				'box-shadow-opacity' => array(
					'title'			=> 'Opacity',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'min'			=> 0,
					'max'			=> 100,
					'default'		=> 1,
					'data-divider'  => 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
			),
			'initial-border' => array(
				'title' 	 => 'Border',
				'break' 	 => '2',
				'style-class'=> 'ep-collapsed',
				'border-color' => array(
					'title'			=> 'Color',
					'size'			=> 'span1',
					'data-input-type' 	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> '#000000',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'data-picker'   => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'border-width' => array(
					'title'			=> 'Width',
					'size'			=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'default'		=> '0',
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-has-unit'=> true,
					'data-timeline-step'=> 'initial'
				),
			),
			'initial-filter' => array(
				'title' 	 => 'Filter',
				'break' 	 => '2,2,2,1',
				'style-class'=> 'ep-collapsed',
				'filter_blur' => array(
					'title'			=> 'Blur',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 9999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'filter_brightness' => array(
					'title'			=> 'Brightness',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 100,
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'filter_contrast' => array(
					'title'			=> 'Contrast',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 100,
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'filter_grayscale' => array(
					'title'			=> 'Grayscale',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'filter_hue-rotate' => array(
					'title'			=> 'Hue-Rotate',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 360,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'filter_invert' => array(
					'title'			=> 'Invert',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'filter_saturate' => array(
					'title'			=> 'Saturate',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 100,
					'min'			=> 0,
					'max'			=> 9999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
			),
		),
		'timeline' => array(
			'regular-general' => array(
				'title' 	 => 'General',
				'break' 	 => '2,2',
				'style-class'=> 'animation-regular-general',
				'hide-title' => true,
				'label' => array(
					'title'				=> 'Label',
					'size'				=> 'span2',
					'data-input-type'	=> 'input-text',
					'placeholder'		=> 'Header Fade-In',
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'default'			=> '',
				),
				'ease' => array(
					'title'				=> 'Easing',
					'size'				=> 'span2',
					'data-input-type'	=> 'select-box',
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'default'			=> 'Power1.easeOut',
					'select-box-values' => $easings,
				),
				'duration' => array(
					'title'				=> 'Duration (ms)',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 800,
					'min'				=> 0,
					'max'				=> 99999,
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial'
				),
				'delay' => array(
					'title'				=> 'Delay',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 99999,
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'data-range-slider' => 'animate',
					'data-timeline-step'=> 'initial',
					'help'				=> 'Delay will be ignored in the \'Step\' preview but will be considered in the \'Timeline\' preview.',
				),
			),
			'onscroll-general' => array(
				'title' 	 => 'General',
				'break' 	 => '1',
				'style-class'=> 'animation-onscroll-general',
				'hide-title' => true,
				'label' => array(
					'title'				=> 'Label',
					'size'				=> 'span4',
					'data-input-type'	=> 'input-text',
					'placeholder'		=> 'Header Fade-In',
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'default'			=> '',
				),
			),
			'add-effects' => array(
				'title' 	 => 'Effects',
				'break' 	 => '2,1,2',
				'hide-title' => true,
				'style-class'=> 'animate-add-effect',
				'ease' => array(
					'title'				=> 'Add Effect',
					'hide-title'		=> true,
					'size'				=> 'span4',
					'data-input-type'	=> 'add-animate-effect',
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'default'			=> '',
				),
			),
			'effects-opacity' => array(
				'title' 	 => 'Opacity',
				'break' 	 => '1',
				'style-class'=> 'animate-effect animate-effect-opacity ep-collapsed',
				'opacity' => array(
					'title'				=> 'Opacity',
					'size'				=> 'span2',
					'help'				=> 'For the editor we will set a minimum opacity of 10% to make it easier to adjust your animations without the element being completely hidden.',
					'data-input-type' 	=> 'range-slider',
					'data-divider'		=> 100,
					'default'			=> 1,
					'min'				=> 0,
					'max'				=> 100,
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-background-color' => array(
				'title' 	 => 'Background Color',
				'break' 	 => '1',
				'style-class'=> 'animate-effect animate-effect-background-color ep-collapsed',
				'background-color' => array(
					'title'			=> 'BG Color',
					'data-style-option' => true,
					'size'			=> 'span2',
					'data-input-type'	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> '#000000',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'data-picker'   => 'animate',
				),
			),
			'effects-color' => array(
				'title' 	 => 'Text Color',
				'break' 	 => '1',
				'style-class'=> 'animate-effect animate-effect-color ep-collapsed',
				'help' => 'Text color will only animate if you have set a color in your initial state in the animation timeline.',
				'color' => array(
					'title'			=> 'Color',
					'data-style-option' => true,
					'size'			=> 'span2',
					'data-input-type'	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> '#000000',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'data-picker'   => 'animate',
				),
			),
			'effects-border' => array(
				'title' 	 => 'Border',
				'break' 	 => '3',
				'style-class'=> 'animate-effect animate-effect-border ep-collapsed',
				'border-color' => array(
					'title'			=> 'Color',
					'size'			=> 'span1',
					'data-input-type' 	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> '#000000',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'data-picker'   => 'animate',
				),
				'border-width' => array(
					'title'			=> 'Width',
					'size'			=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'default'		=> '0',
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-has-unit'=> true,
				),
			),
			'effects-box-shadow' => array(
				'title' 	 => 'Drop Shadow',
				'break' 	 => '3,3',
				'style-class'=> 'animate-effect animate-effect-box-shadow ep-collapsed',
				'box-shadow-color' => array(
					'title'			=> 'Color',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> '#000000',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'responsive'	=> true,
					'data-picker'	=> 'animate',
				),
				'box-shadow-h-length' => array(
					'title'			=> 'H Length',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 999,
					'class'			=> 'editor-listen',
					'data-handler'	=> 'animate',
					'data-has-unit'	=> true,
					'data-range-slider' => 'animate',
				),
				'box-shadow-v-length' => array(
					'title'			=> 'V Length',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-has-unit'	=> true,
				),
				'box-shadow-blur-radius' => array(
					'title'			=> 'Blur',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-has-unit'	=> true,
				),
				'box-shadow-spread-radius' => array(
					'title'			=> 'Spread',
					'size'			=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
					'data-has-unit'	=> true,
					'help'  => 'This option only applies to box shadows, not text shadows.',
				),
				'box-shadow-opacity' => array(
					'title'			=> 'Opacity',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'range-slider',
					'data-target'	=> '.is-content',
					'min'			=> 0,
					'max'			=> 100,
					'default'		=> 1,
					'data-divider'  => 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-move' => array(
				'title' 	 => 'Move',
				'break' 	 => '2',
				'style-class'=> 'animate-effect animate-effect-move ep-collapsed',
				'translateX' => array(
					'title'				=> 'Move X',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 5000,
					'data-has-unit'		=> true,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
				'translateY' => array(
					'title'				=> 'Move Y',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-has-unit'		=> true,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-scale' => array(
				'title' 	 => 'Scale',
				'break' 	 => '2',
				'style-class'=> 'animate-effect animate-effect-scale ep-collapsed',
				'scaleX' => array(
					'title'				=> 'Scale X',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 1,
					'min'				=> 0,
					'max'				=> 9999,
					'data-divider'		=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
				'scaleY' => array(
					'title'				=> 'Scale Y',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 1,
					'min'				=> 0,
					'max'				=> 9999,
					'data-divider'		=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-skew' => array(
				'title' 	 => 'Skew',
				'break' 	 => '2',
				'style-class'=> 'animate-effect animate-effect-skew ep-collapsed',
				'skewX' => array(
					'title'				=> 'Skew X',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
				'skewY' => array(
					'title'				=> 'Skew Y',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-rotate' => array(
				'title' 	 => 'Rotate',
				'break' 	 => '2',
				'style-class'=> 'animate-effect animate-effect-rotate ep-collapsed',
				'rotate' => array(
					'title'				=> 'Rotate',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-rotate3d' => array(
				'title' 	 => '3D-Rotate',
				'break' 	 => '2',
				'style-class'=> 'animate-effect animate-effect-rotate3d ep-collapsed',
				'rotateX' => array(
					'title'				=> 'Rotate X',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
				'rotateY' => array(
					'title'				=> 'Rotate Y',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-gradient' => array(
				'title' 	 => 'Gradient',
				'break' 	 => '2,3,3',
				'style-class'=> 'animate-effect animate-effect-gradient ep-collapsed',
				'gradient_applyto' => array(
					'data-input-type' 	=> 'select-box',
					'title'				=> 'Apply to',
					'size'				=> 'span2',
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'default' 	 		=> 'background',
					'help'	     => 'You can set the \'Apply to\' setting in your animation\'s \'Initial State\' options.',
					'select-box-values' => array(
						'background'	=> 'Background',
						'text' 	 		=> 'Text',
					),
				),
				'gradient_angle' => array(
					'title'				=> 'Angle',
					'size'				=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 360,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
				'gradient_color_2' => array(
					'title'			=> 'Color',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> '#000000',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'data-picker'	=> 'animate',
				),
				'gradient_color_2_opacity' => array(
					'title'				=> 'Opacity',
					'size'				=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 100,
					'data-divider'  	=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
				'gradient_color_2_progress' => array(
					'title'				=> 'Progress',
					'size'				=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 100,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
				'gradient_color_1' => array(
					'title'			=> 'Color',
					'size'			=> 'span1',
					'offset'		=> false,
					'data-input-type' 	=> 'color',
					'data-target'	=> '.is-content',
					'default'		=> '#000000',
					'class'			=> 'color-picker editor-listen',
					'data-handler'  => 'colorPicker',
					'data-picker'	=> 'animate',
				),
				'gradient_color_1_opacity' => array(
					'title'				=> 'Opacity',
					'size'				=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 100,
					'data-divider'  	=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
				'gradient_color_1_progress' => array(
					'title'				=> 'Progress',
					'size'				=> 'span1',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 9999,
					'data-negative'		=> true,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-blur' => array(
				'title' 	 => 'Blur',
				'break' 	 => '1',
				'style-class'=> 'animate-effect animate-effect-filter_blur ep-collapsed',
				'filter_blur' => array(
					'title'			=> 'Blur',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 9999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-brightness' => array(
				'title' 	 => 'Brightness',
				'break' 	 => '1',
				'style-class'=> 'animate-effect animate-effect-filter_brightness ep-collapsed',
				'filter_brightness' => array(
					'title'			=> 'Blur',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 100,
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-contrast' => array(
				'title' 	 => 'Contrast',
				'break' 	 => '1',
				'style-class'=> 'animate-effect animate-effect-filter_contrast ep-collapsed',
				'filter_contrast' => array(
					'title'			=> 'Contrast',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 100,
					'min'			=> 0,
					'max'			=> 999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-grayscale' => array(
				'title' 	 => 'Grayscale',
				'break' 	 => '1',
				'style-class'=> 'animate-effect animate-effect-filter_grayscale ep-collapsed',
				'filter_grayscale' => array(
					'title'			=> 'Grayscale',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-hue-rotate' => array(
				'title' 	 => 'Hue-Rotate',
				'break' 	 => '1',
				'style-class'=> 'animate-effect animate-effect-filter_hue-rotate ep-collapsed',
				'filter_hue-rotate' => array(
					'title'			=> 'Hue-Rotate',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 360,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-invert' => array(
				'title' 	 => 'Invert',
				'break' 	 => '1',
				'style-class'=> 'animate-effect animate-effect-filter_invert ep-collapsed',
				'filter_invert' => array(
					'title'			=> 'Invert',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 0,
					'min'			=> 0,
					'max'			=> 100,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
			'effects-saturate' => array(
				'title' 	 => 'Saturate',
				'break' 	 => '1',
				'style-class'=> 'animate-effect animate-effect-filter_saturate ep-collapsed',
				'filter_saturate' => array(
					'title'			=> 'Saturate',
					'size'			=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'		=> 100,
					'min'			=> 0,
					'max'			=> 9999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
		),
		'scroll' => array(
			'onscroll-start' => array(
				'title' 	 => 'Animation Trigger',
				'break' 	 => '1,2',
				'style-class'=> 'animation-onscroll-general',
				'scroll-notice' => array(
					'data-input-type' => 'notice',
					'hide-title' => true,
					'size'		 => 'span4',
					'class'     	=> 'ep-notice',
					'data-handler'  => 'animate',
					'default'    => 'Use drag and drop to adjust triggers.<br /><br /><span>If pin enabled:</span> Your content will get pinned once the start point meets the start trigger, so make sure the start point is not on the bottom. Instead of the end trigger, adjust the pin duration for pinned content.',
					'notice-type'=> 'warning',
				),
				
			),
			'onscroll-pinning' => array(
				'title' 	 => 'General',
				'break' 	 => '2,2,2',
				'style-class'=> 'animation-onscroll-general',
				'reset_markers' => array(
					'title'				=> 'Markers',
					'size'				=> 'span2',
					'help'				=> '',
					'data-input-type'	=> 'button',
					'placeholder'		=> '',
					'default'			=> '',
					'button-title'		=> 'Reset Markers',
					'class'				=> 'semplice-button white-button editor-listen',
					'data-handler'		=> 'animate',
				),
				'scrub' => array(
					'title'				=> 'Smoothing',
					'help'				=> 'Soften the link between the animation and the scrollbar for a smoother animation.',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 0,
					'min'				=> 0,
					'max'				=> 100,
					'data-divider'		=> 10,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
				'pin' => array(
					'data-input-type' 	=> 'switch',
					'switch-type'		=> 'twoway',
					'title'				=> 'Pin Content',
					'size'				=> 'span2',
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'default' 	 		=> 'false',
					'help'				=> 'If enabled, your content will stay in place while scrolling, animating at the start point position for the duration you choose.',
					'switch-values' => array(
						'false'	 => 'No',
						'true' 	 => 'Yes',
					),
				),
				'pinSpacing' => array(
					'data-input-type' 	=> 'switch',
					'switch-type'		=> 'twoway',
					'title'				=> 'Pin Spacing',
					'size'				=> 'span2',
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'default' 	 		=> 'false',
					'help'				=> 'If enabled, spacing will be added to the bottom to push other elements down so that when the pinned element gets unpinned, the following content catches up perfectly.',
					'switch-values' => array(
						'false'	 => 'No',
						'true' 	 => 'Yes',
					),
				),
				'markers' => array(
					'data-input-type' 	=> 'switch',
					'switch-type'		=> 'twoway',
					'title'				=> 'Show markers',
					'help'				=> 'This will show the markers (starting points and triggers) of your animation to make it easier to test and debug.',
					'size'				=> 'span2',
					'class'				=> 'editor-listen',
					'data-handler'  	=> 'animate',
					'default' 	 		=> 'false',
					'switch-values' => array(
						'false'	 => 'No',
						'true' 	 => 'Yes',
					),
				),
				'pin_duration' => array(
					'title'				=> 'Pin Duration',
					'help'				=> 'Set your pin duration by percentage. Example: 50% means your content will be pinned until you scroll 50% of the viewport.',
					'size'				=> 'span2',
					'data-input-type' 	=> 'range-slider',
					'default'			=> 50,
					'min'				=> 0,
					'max'				=> 9999,
					'class' 			=> 'editor-listen',
					'data-handler'		=> 'animate',
					'data-range-slider' => 'animate',
				),
			),
		),
	),
);
?>